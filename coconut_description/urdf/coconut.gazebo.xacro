<?xml version="1.0"?>
<robot name="coconut" xmlns:xacro="http://ros.org/wiki/xacro">

  
  <gazebo reference="base_link">
    <mu1>0.8</mu1>
    <mu2>0.8</mu2>
    <kp>500000.0</kp>
    <kd>1000000.0</kd>
    <minDepth>0.001</minDepth>
    <material>Gazebo/White</material>
  </gazebo>

  <gazebo reference="front_caster_wheel">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>1000000.0</kd>
    <minDepth>0.001</minDepth>
    <material>Gazebo/FlatBlack</material>
  </gazebo>  

  <gazebo reference="back_caster_wheel">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>1000000.0</kd>
    <minDepth>0.001</minDepth>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="wheel_l">
    <mu1>0.8</mu1>
    <mu2>0.8</mu2>
    <kp>500000.0</kp>
    <kd>1000000.0</kd>
    <minDepth>0.001</minDepth>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="wheel_r">
    <mu1>0.8</mu1>
    <mu2>0.8</mu2>
    <kp>500000.0</kp>
    <kd>1000000.0</kd>
    <minDepth>0.001</minDepth>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <!-- Lidar -->
  <gazebo reference="lidar_link">
    <sensor type="ray" name="lds_lfcd_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>7</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.5</min>
          <max>16</max>
          <!-- <resolution>0.015</resolution> -->
          <resolution>0.03</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <!-- <stddev>0.02</stddev> -->
          <stddev>0.03</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- IMU -->
  <gazebo reference="imu_link">
    <sensor type="imu" name="imu">
      <always_on>true</always_on>
      <visualize>false</visualize>
    </sensor>
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName>
      <frameName>imu_link</frameName>
      <topicName>imu_gz</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>200</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>1e-3</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>

  <!-- Odom diff drive -->
  <gazebo>
    <plugin name="odom_diff_drive" filename="libgazebo_ros_diff_drive.so">
      <commandTopic>coconut_vel</commandTopic>
      <odometryTopic>odom_gz</odometryTopic>
      <odometryFrame>odom_gz</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>false</publishOdomTF>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel_l_joint</leftJoint>
      <rightJoint>wheel_r_joint</rightJoint>
      <wheelSeparation>0.461</wheelSeparation>
      <wheelDiameter>0.17</wheelDiameter>
      <wheelAcceleration>3.0</wheelAcceleration>
      <wheelTorque>65</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>


  <!-- DEPTH CAMERA -->
  <gazebo reference="d415_link">
    <material>Gazebo/FlatBlack</material>
    <sensor name="coconut/camera_link" type="depth">
      <update_rate>10</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>B8G8R8</format>
        </image>
        <!-- <clip>
          <near>0.1</near>
          <far>20.0</far>
        </clip> -->
        <!-- <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>10.0</stddev>
        </noise> -->
      </camera>
      <plugin name="camera_dept_kinect" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera_dept</cameraName>
        <imageTopicName>/coconut_uvc/camera/depth/image_raw</imageTopicName>
        <cameraInfoTopicName>/coconut_uvc/camera/depth/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/coconut_uvc/camera/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/coconut_uvc/camera/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/coconut_uvc/camera/depth/points</pointCloudTopicName>
        <frameName>camera_dept_link</frameName>
        <pointCloudCutoff>0.3</pointCloudCutoff>
        <pointCloudCutoffMax>8.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
</robot>

          <!-- <format>R8G8B8</format> -->